<!DOCTYPE html>
<html>

<head>
    <link rel="stylesheet" href="/estat/eStat/css/eStatU.css">
    <script src="/estat/eStat/lib/d3/d3.v4.min.js"></script>
    <script src="/estat/eStat/lib/jquery/jquery-3.2.1.min.js"></script>
    <script src="/estat/eStat/lib/jquery/jquery-ui.min.js"></script>
    <script src="/estat/eStat/lib/DistributionsUtil.js" ></script>
    <script src="/estat/eStat/js/eStatU.js"></script>
    <title data-msgid="Regression Experiment">Regression</title>
</head>

<body>

  <div width="600" height="600" style="position:absolute; left:10px; top:0px">
    <br>
    <div class="title">
      <b>&nbsp; <span data-msgid="Regression Experiment">Regression Experiment</span></b>
      <a class="menu" href="index.html"><b><span data-msgid="Menu">Menu</span></b></a>  
    </div>
    <br>
    <svg id="ScatterPlot2" width="600" height="600"> </svg> <p> 
    <button type="button" id="erase" >
        <span data-msgid="Erase All">Erase All</span>
    </button> 
    &nbsp;&nbsp;   
    <input type="radio" name="addtype" id="add_on"  value="on" checked />
      <label><span data-msgid="Add Point">Add Point</span></label>&nbsp;   
    <input type="radio" name="addtype" id="add_off" value="off" />
      <label><span data-msgid="Erase Point">Erase Point</span></label>    
  </div>

  <script>

      var svg = d3.select("#ScatterPlot2"); 

      var svgWidth    = 600;
      var svgHeight   = 600;
      var margin      = {top: 100, bottom: 70, left: 70, right: 100};
      var buffer      = 40;
      var graphWidth  = svgWidth - margin.left - margin.right;
      var graphHeight = svgHeight - margin.top - margin.bottom;

      // 회귀 시뮬레이션 변수들
      var width  = svgWidth;
      var height = svgHeight;
      var xlim = [0, 10];
      var ylim = [0, 10];
      var xscale = d3.scaleLinear()
                     .domain(xlim)
                     .range([margin.left, width - margin.right]);
      var yscale = d3.scaleLinear()
                     .domain(ylim)
                     .range([height - margin.bottom, margin.top]);
      var xaxis  = d3.axisBottom(xscale)
                     .ticks(5);
      var yaxis  = d3.axisLeft(yscale)
                     .ticks(5);
      var line = svg.append("line");
              
      var removePoint = function() {
           if(document.getElementById("add_off").checked) {	    
             this.remove();
	     updateRegressionLine();
           }
         }

      var drag = d3.drag()
            .on("start", function(d) {
           	d3.event.sourceEvent.stopPropagation();
	        d3.select(this)
	          .style("fill", "#bf616a")
	          .attr("r", 10);
            })
            .on("drag", function(d) {
               var x = d3.event.x;
	       var y = d3.event.y;
	       d3.select(this)
	         .attr("cx", x)
	         .attr("cy", y);
	    updateRegressionLine();
            })
           .on("end", function(d) {
	       d3.select(this)
	         .style("fill", "black")
	        .attr("r", 5);
            });


      // 회귀선 시뮬레이션 -------------------------------------------------------------
      var sub1  = svgStrU[52][langNum];
      var sub2  = svgStrU[53][langNum];
      var ty    = margin.top/3;
      svg.append("text").attr("class","titleS").attr("x",margin.left).attr("y",ty).text(sub1);
      svg.append("text").attr("class","titleS").attr("x",margin.left).attr("y",ty+20).text(sub2);

      showScatterPlot3(graphWidth, graphHeight); // 화면

      ncount = 0;
      svg.on("click", function() {
      if(d3.event.defaultPrevented) return;
    
      var pos = d3.mouse(this);
      if(document.getElementById("add_on" ).checked) {
                if ( pos[0] > margin.left && pos[0] < margin.left+graphWidth 
                     && pos[1] > margin.top && pos[1] < margin.top+graphHeight) {
            	  addPoint(pos[0], pos[1]);
                  ncount++;
                  updateRegressionLine();
                }
          }
      });

      // 회귀 시뮬레이션 화면 지우기
      d3.select("#erase").on("click",function() {

         svg.selectAll("circle").remove();
         svg.selectAll("text.reglabel3").remove(); 
         svg.selectAll("line.regline").remove();  

         updateRegressionLine();
         ncount = 0;
      })



  </script>

</body>
</html>
