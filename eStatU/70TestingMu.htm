<!DOCTYPE html>
<html>

<head>
    <title data-msgid="Testing Hypothesis mu_title">Testing Hypothesis &mu;</title>
    <link rel="stylesheet" href="/estat/eStat/css/eStatU.css">
    <script src="/estat/eStat/lib/d3/d3.v4.min.js"></script>
    <script src="/estat/eStat/lib/jquery/jquery-3.2.1.min.js"></script>
    <script src="/estat/eStat/lib/jquery/jquery-ui.min.js"></script>
    <script src="/estat/eStat/lib/DistributionsUtil.js" ></script>
    <script src="/estat/eStat/js/language.js" ></script>
    <script src="/estat/eStat/js/eStatU.js"></script>
    <script src="/estat/eStat/lib/FileSaver.min.js" ></script>
    <script src="/estat/eStat/lib/convertSVG.js"></script>
</head>

<body>
  <div width="600" height="410" style="position:absolute; left:10px; top:0px">
    <br>
    <div class="title">
      <b>&nbsp; 
         <span data-msgid="Testing Hypothesis mu">
           Testing Hypothesis : Population Mean &mu; 
         </span> 
      </b>
      <a class="menu" href="index.html"><b><span data-msgid="Menu">Menu</span></b></a>  
    </div>
    <br>

    <form name="myForm0"> 
      <b>[<span data-msgid="Hypothesis">Hypothesis</span>]</b> 
      <span class="fontmath">&nbsp;&nbsp;
        H<sub>o</sub> : &mu; = &mu;<sub>o</sub> &nbsp;
      </span>
      <input type="text" class="textarea" size=6 id="mu"> 
      <br> &nbsp;&nbsp;
      <span class="fontmath">
	    <input type="radio" name = "type0" value="1" checked>
	    H<sub>1</sub> : &mu; &ne;  &mu;<sub>o</sub> &nbsp;&nbsp;
	    <input type="radio" name = "type0" value="2" >
	    H<sub>1</sub> : &mu; > &mu;<sub>o</sub> &nbsp;&nbsp;      
	    <input type="radio" name = "type0" value="3" >
            H<sub>1</sub> : &mu; < &mu;<sub>o</sub>    
      </span>
    </form>

    <form name="myForm1"> 
      <b>[<span data-msgid="Test Type">Test Type</span>]</b> &nbsp;
      <input type="radio" name = "type1" value="1" checked> <span class="fontmath" data-msgid="t-test">t-test</span>
      &nbsp; <input type="radio" name = "type1" value="2" ><span class="fontmath" data-msgid="Z-test"> Z-test</span>      
      &nbsp; &sigma;<sup>2</sup> = <input type="text" class="textarea" size=6 id="variP"> 
    </form> 

    <form name="myForm2">&nbsp;&nbsp;&nbsp; 
      <span data-msgid="Significance Level">Significance Level</span> &nbsp; 
      <span class="fontmath">&alpha;</span> = 
      <input type="radio" name = "type2" value="1" checked> 5%       
      <input type="radio" name = "type2" value="2" > 1%
    </form>       

    <b>[<span data-msgid="Sample Data">Sample Data</span>]</b>&nbsp; 
    <span class="fontguide" data-msgid="input either sample data">
      (input either sample data or sample statistics using csv / bsv)
    </span>   
    <table class="data">
      <tbody>
	<tr>
          <td> &nbsp; &nbsp;</td>
	  <td><input type="text" size=60 id="data1"></td>
	</tr>
      </tbody>
    </table>
    
    <b>[<span data-msgid="Sample Statistics">Sample Statistics</span>]</b>   
    <table class="stat">
      <tbody>
	<tr>
          <td></td>
	  <td><span data-msgid="Sample Size">Sample Size</span></td>
	  <td><span class="fontmath">n</span></td>
	  <td>=</td>
	  <td><input type="text" class="textarea" size=6 id="nn"></td>
          <td> <span class="fontguide">(>1) </span></td>
	</tr>
	<tr>
          <td></td>
	  <td><span data-msgid="Sample Mean">Sample Mean</span></td>
	  <td><span class="fontmath">x&#772;</span></td>
	  <td>=</td>
	  <td><input type="text" class="textarea" size=6 id="xbar"></td>
	</tr>
	<tr>
          <td></td>
	  <td><span data-msgid="Sample Variance">Sample Variance</span></td>
	  <td><span class="fontmath">s<sup>2</sup></span></td>
	  <td>=</td>
	  <td><input type="text" class="textarea" size=6 id="variS"></td>
<!--
          <td><span class="fontguide" data-msgid="if Z-test-1">(if Z-test, enter population variance &sigma;<sup>2</sup>)</span> </td>
-->
	</tr>
      </tbody>
    </table>

    <b>[<span data-msgid="Confidence Interval">Confidence Interval</span>]</b>
<!--
       &nbsp; <span class="fontguide" data-msgid="if Z-test-2">(if Z-test, z<sub>1-&alpha;/2 </sub> is used)</span>     
-->
    <table class="stat">
      <tbody>
	<tr>
          <td></td>
	  <td><span class="fontmath">x&#772;</span></td>
	  <td>&plusmn;</td>
	  <td><span class="fontmath" id="intFormula"></span></td>
          <td>&hArr;</td>
	  <td>[&nbsp;<input type="text" class="textarea" size=6 id="cleft">&nbsp;&nbsp;&nbsp;,</td>
	  <td><input type="text" class="textarea" size=6 id="cright">&nbsp;]</td>
	</tr>
      </tbody>
    </table>
    <button type="button" id="executeTH" >
        <span data-msgid="Execute">Execute</span>
    </button> 
    <p>
    <svg id="chart" width="600" height="400"> </svg> 
    <br>
    <button type="button" id="saveGraphU" >
	<span class="tooltiptext" data-msgid="Graph Save">Graph Save</span>
    </button>

  </div> 

  <script>

      var bar = d3.select("#chart");
 
      var svgWidth, svgHeight, margin, graphWidth, graphHeight;
      var graphWidth2, graphHeight2;
      var svgWidth2   = 600;
      var svgHeight2  = 400;

      var nobs, avg, gxmin, gxmax, gymin, gymax;
      var title;
      var df, info, alpha, pvalue, b, c, d, e, f, g, h;
      var mu, nn, xbar, std, stat, teststat, left, right, temp, variS, variP;
      var intT = "t<sub>n-1 ; &alpha;/2</sub> &nbsp; (s / &radic; n )";
      var intZ = "z<sub>&alpha;/2</sub> &nbsp; (&sigma; / &radic; n )";

      var hypoType = 1;

      document.getElementById("cleft").disabled = true; 
      document.getElementById("cright").disabled = true;  

      // H1 type
      var h1 = document.myForm0.type0;
      var h1Type = h1.value; 
      h1[0].onclick = function() { h1Type = h1.value; clearText(); }    // 양측검정
      h1[1].onclick = function() { h1Type = h1.value; clearText(); }    // 우측검정
      h1[2].onclick = function() { h1Type = h1.value; clearText(); }    // 좌측검정

      // Test type
      var test = document.myForm1.type1;
      var testType = 1;
      document.getElementById("variP").disabled  = true; 
      document.getElementById("intFormula").innerHTML = intT;
      test[0].onclick = function() { // t-test 
        testType = 1; 
        clearText();
        document.getElementById("intFormula").innerHTML = intT;
        document.getElementById("variP").value     = null; 
        document.getElementById("variS").disabled  = false; 
        document.getElementById("variP").disabled  = true; 
      }  
      test[1].onclick = function() { // Z-test
        testType = 2; 
        clearText();
        document.getElementById("intFormula").innerHTML = intZ;
        document.getElementById("variS").value     = null; 
        document.getElementById("variS").disabled  = true; 
        document.getElementById("variP").disabled  = false; 
      }  

      // alpha
      var a = document.myForm2.type2;
      alpha = 0.05;
      a[0].onclick = function() { 
        alpha = 0.05; 
        clearText();
      }  
      a[1].onclick = function() {
        alpha = 0.01; 
        clearText();
      }  
      // data input control =====================================
      d3.select("#data1").on("input", function() {
        stat = simplestat("#data1");  
        document.getElementById("nn").value   = stat.n;    
        document.getElementById("xbar").value = f3(stat.xbar);
        document.getElementById("variS").value  = f3(stat.var);  
        if (testType == 1) temp = t_inv(1 - alpha/2, stat.n - 1, info) * Math.sqrt(stat.var / stat.n);
        else temp = stdnormal_inv(1 - alpha/2, info) * Math.sqrt(stat.var /stat.n);
        left  = stat.xbar - temp;
        right = stat.xbar + temp;  
        document.getElementById("cleft").value   = f3(left);
        document.getElementById("cright").value  = f3(right); 
      });

      updateData = function() {
        document.getElementById("data1").value = ''; 
      }

      d3.select("#nn").on("input", updateData);
      d3.select("#xbar").on("input", updateData);
      d3.select("#variS").on("input", updateData);

      // Testing Hypothesis ======================================
      d3.select("#executeTH").on("click",function() {
        bar.selectAll("*").remove();

        // input value
        mu   = parseFloat(d3.select("#mu").node().value);
        nn   = parseFloat(d3.select("#nn").node().value);
        xbar = parseFloat(d3.select("#xbar").node().value);
        if (testType == 1) { // t-test
          variS = parseFloat(d3.select("#variS").node().value);
          std   = Math.sqrt(variS);
        }
        else { // Z-test
          variP = parseFloat(d3.select("#variP").node().value);
          std   = Math.sqrt(variP);
        }
        df = nn - 1;

        // confidence interval
        if (testType == 1) temp = t_inv(1 - alpha/2, df, info) * std / Math.sqrt(nn);
        else temp = stdnormal_inv(1 - alpha/2, info) * std / Math.sqrt(nn);
        left  = xbar - temp;
        right = xbar + temp;  
        document.getElementById("cleft").value   = f3(left);
        document.getElementById("cright").value  = f3(right); 

        // test statistics
        teststat = (xbar - mu) / (std / Math.sqrt(nn));

        if (isNaN(mu) || isNaN(nn) || isNaN(xbar) || nn < 2 || std <= 0 ) {  // wrong input
          bar.append("text").attr("class","mean")
             .attr("x", 150)
             .attr("y", 100)
             .text("No input or wrong input !!   Try again.")
             .style("stroke","red")
        }
        else {
         if (testType == 2) {    // Z-test
          if (isNaN(variP)) { // Population variance checking
            bar.append("text").attr("class","mean")
               .attr("x", 150)
               .attr("y", 100)
               .text("No input or wrong input !!   Try again.")
               .style("stroke","red")
          }
          else {
           if (h1Type == 1) {
            h = alpha / 2;  
            f = stdnormal_inv(h, info);
            g = -f;
            if (teststat < 0) pvalue = 2 * stdnormal_cdf(teststat);
            else  pvalue = 2 * (1 - stdnormal_cdf(teststat));
            drawNormalGraphTH(hypoType, h1Type, teststat, 0, 1, f, g, h, pvalue, mu);
           }
           else if (h1Type == 2) {
            h = alpha;  
            f = -5
            g = stdnormal_inv(1-h, info);
            pvalue = 1 - stdnormal_cdf(teststat);
            drawNormalGraphTH(hypoType, h1Type, teststat, 0, 1, f, g, h, pvalue, mu);
           }
           else {
            h = alpha;  
            f = stdnormal_inv(h, info);
            g = 5;
            pvalue = stdnormal_cdf(teststat);
            drawNormalGraphTH(hypoType, h1Type, teststat, 0, 1, f, g, h, pvalue, mu);
           }
          } // end of Z-test variP checking else 
         } // end of Z-test
         else { // t-test 
          if (isNaN(variS)) {
            bar.append("text").attr("class","mean")
               .attr("x", 150)
               .attr("y", 100)
               .text("No input or wrong input !!   Try again.")
               .style("stroke","red")
          }
          else {
           if (h1Type == 1) {
            h = alpha / 2;  
            f = t_inv(h, df, info);
            g = -f;
            if (teststat < 0) pvalue = 2 * t_cdf(teststat, df, info);
            else  pvalue = 2 * (1 - t_cdf(teststat, df, info));
            drawTdistGraphTH(hypoType, h1Type, teststat, df, f, g, h, pvalue, mu);
           }
           else if (h1Type == 2) {
            h = alpha;  
            f = -5;   //t_inv(0.0001, df, info);
            g = t_inv(1-h, df, info);
            pvalue = 1 - t_cdf(teststat, df, info);
            drawTdistGraphTH(hypoType, h1Type, teststat, df, f, g, h, pvalue, mu);
           }
           else {
            h = alpha;  
            f = t_inv(h, df, info);
            g = 5;    //t_inv(0.9999, df, info);
            pvalue = t_cdf(teststat, df, info);
            drawTdistGraphTH(hypoType, h1Type, teststat, df, f, g, h, pvalue, mu);
           }
          } // end of t-test else
         } // end of t-test         
        } // end of input error cheching if
      })  // end of Execute

      // svg Graph Save
      d3.select("#saveGraphU").on("click", function() {
        var svg = d3.select("#chart");
        var width = svgWidth2;
        var height = svgHeight2;
        var svgString = getSVGString(svg.node());
        svgString2Image(svgString, width, height, 'png', save);
        function save(dataBlob, filesize) {
          saveAs(dataBlob, 'eStatGraphU.png');
        }
      });

// alpha t Z 바뀔때 clear
function clearText() {
        bar.selectAll("*").remove();
        document.getElementById("cleft").value  = null;
        document.getElementById("cright").value = null;
}

  </script>
</body>
</html>
